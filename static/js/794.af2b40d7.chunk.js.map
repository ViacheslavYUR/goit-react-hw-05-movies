{"version":3,"file":"static/js/794.af2b40d7.chunk.js","mappings":"wNAGaA,EAAaC,EAAAA,GAAAA,GAAH,2FAKVC,EAAaD,EAAAA,GAAAA,GAAH,8DAKVE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uG,SCRhBI,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC3B,SAACV,EAAD,WACE,SAACC,EAAD,CAAWU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA/C,UACE,uBAAIK,OAFSD,EADU,IAO7B,OAAO,SAACX,EAAD,UAAaS,GACrB,EAED,IAEAJ,EAAUW,aAAe,CACvBV,QAAS,G,wPClBEW,EAAYhB,EAAAA,GAAAA,IAAH,icAmBTiB,EAAOjB,EAAAA,GAAAA,KAAH,8KAUJkB,EAAelB,EAAAA,GAAAA,OAAH,gVAiBZmB,EAAQnB,EAAAA,GAAAA,MAAH,6PC9ClB,EAFqB,CAAEoB,OAAQ,I,SCSzBC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,WAAS,UAAKC,IAAxC,eAAOX,EAAP,KAAcY,EAAd,KAmBQC,EAAUb,EAAVa,MAER,OACE,SAACV,EAAD,WACE,UAACC,EAAD,CAAMK,SAdW,SAAAK,GAEnB,GADAA,EAAEC,iBACwC,KAAtCf,EAAMO,OAAOS,OAAOC,cACtB,OAAOC,EAAAA,GAAAA,KAAW,yBAGpBT,EAAST,EAAMO,QACfK,GAAS,UAAKD,GACf,EAMG,WACE,SAACN,EAAD,CAAcc,KAAK,SAAS,aAAW,gBAAvC,UACE,SAAC,MAAD,OAGF,SAACb,EAAD,CACEc,KAAK,SACLC,MAAOR,EACPM,KAAK,OACLG,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,UAAQ,EACRC,SAlCa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdP,EAAgBO,EAAhBP,KAAMC,EAAUM,EAAVN,MACdT,GAAS,SAAAgB,GACP,OAAO,kBAAKA,GAAZ,cAAwBR,EAAOC,EAAML,QACtC,GACF,QAkCF,EAED,GAAea,EAAAA,EAAAA,MAAKrB,G,UCmCpB,EA9Ee,WACb,OAAwCsB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAASC,EAAAA,EAAAA,UAAQ,kBAAMC,OAAOC,aAAP,OAAuBL,GAA7B,GAA6C,CAACA,IAE7DlB,EAAgBoB,EAAhBpB,MAAOwB,EAASJ,EAATI,KACTC,EAAcC,OAAOF,GAAQE,OAAOF,GAAQ,EAClD,GAAoC3B,EAAAA,EAAAA,UAAS,GAA7C,eAAO8B,EAAP,KAAmBC,EAAnB,KACA,GAA0B/B,EAAAA,EAAAA,UAAS,IAAnC,eAAOgC,EAAP,KAAcC,EAAd,KACA,GAAsCjC,EAAAA,EAAAA,UAAS,IAA/C,eAAOkC,EAAP,KAAoBC,EAApB,KACA,GAA8BnC,EAAAA,EAAAA,WAAS,GAAvC,eAAOoC,EAAP,KAAgBC,EAAhB,KACA,GAA0BrC,EAAAA,EAAAA,UAAS,MAAnC,eAAOsC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKrC,EAGL,IACEkC,GAAW,GACX,IAAMI,EAAQ,mCAAG,WAAMd,GAAN,4FACwBe,EAAAA,EAAAA,IAAYf,EAAMxB,GAD1C,gBACPrB,EADO,EACPA,QAAS6D,EADF,EACEA,YACZ7D,EAAQ8D,QAIXb,EAAcY,GACdV,EAASnD,KAJT+D,EAAAA,OAAAA,QAAe,YACfd,EAAc,IAJD,2CAAH,sDAUdU,EAASb,EAAazB,EAKvB,CAJC,MAAO2C,GACPP,EAASO,EAAIC,QACd,CAfD,QAgBEV,GAAW,EACZ,CACF,GAAE,CAAClC,EAAOyB,EAAaD,IAExB,IAAMqB,GAAgBC,EAAAA,EAAAA,cACpB,SAAA9C,GACMA,IAAU+B,GACZZ,EAAgB,CAAEnB,MAAAA,EAAOwB,KAAM,IAC/BM,EAAS,IACTE,EAAehC,IAEf0C,EAAAA,OAAAA,QAAe,uCAElB,GACD,CAACvB,EAAiBY,IAOpB,OACE,kBAAMgB,MAAO,CAAEC,cAAe,IAA9B,WACE,SAAC,EAAD,CAAWpD,SAAUiD,KACrB,SAACnE,EAAA,EAAD,CAAWC,QAASkD,IACnBM,IAAS,iCAASA,EAAMS,WACxBjB,EAAa,IACZ,SAAC,IAAD,CACEsB,WAAW,MACXC,UAAU,IACVC,aAbgB,SAAAlD,GACtBkB,EAAgB,CAAEnB,MAAAA,EAAOwB,KAAMvB,EAAEmD,SAAW,GAC7C,EAYOC,mBAAoB,EACpBC,UAAW3B,EACX4B,cAAc,IACdC,sBAAuB,KACvBC,sBAAsB,WACtBC,gBAAgB,aAChBC,UAAWlC,EAAc,IAG5BQ,IAAW,SAAC2B,EAAA,EAAD,MAGjB,C,mGCnFYC,GAAmBvF,EAAAA,EAAAA,IAAOwF,IAAPxF,CAAH,wgBAchB,SAAAyF,GAAC,MAAI,MAAJ,IAKC,SAAAA,GAAC,MAAI,OAAJ,IAKH,SAAAA,GAAC,MAAI,KAAJ,G,yLCzBRC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAET9C,OAAQ,CACN+C,QAAS,sCAIAC,EAAa,mCAAG,WAAM5C,GAAN,+EACT,QACL,OAFc,SAGJwC,EAASK,IAAT,oBAFL,QAEK,YADV,OACU,iBAAoD7C,IAHhD,uBAGnB8C,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,2CAAH,sDAOb/B,EAAW,mCAAG,WAAOf,EAAMxB,GAAb,yFACFgE,EAASK,IAAT,6BAAmC7C,EAAnC,kBAAiDxB,IAD/C,uBACjBsE,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,wDAKXC,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAASK,IAAT,iBAAuBG,IADlB,uBACpBF,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdG,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASK,IAAT,iBAAuBK,EAAvB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAY,mCAAG,WAAMH,GAAN,yFACHR,EAASK,IAAT,iBAAuBG,EAAvB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/initialState.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","shared/Pagination.syled.js","shared/services/fetch-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledList = styled.ul`\n  list-style: circle;\n  padding: 10px 5px;\n  margin-left: 15px;\n`;\nexport const StyledItem = styled.li`\n  padding: 5px 5px;\n  color: black;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  color: black;\n  &:hover {\n    color: #0000cd;\n    font-weight: 600;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { StyledList, MovieLink, StyledItem } from './MovieList.styled';\n\nconst MovieList = ({ results }) => {\n  const location = useLocation();\n  const elements = results.map(({ id, title }) => (\n    <StyledItem key={id}>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        <p>{title}</p>\n      </MovieLink>\n    </StyledItem>\n  ));\n  return <StyledList>{elements}</StyledList>;\n};\n\nexport default MovieList;\n\nMovieList.defaultProps = {\n  results: [],\n};\n\nMovieList.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","const initialState = { search: '' };\n\nexport default initialState","import { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\n\nimport { Container, Form, SearchButton, Input } from './Searchbar.styled';\n\nimport initialState from './initialState';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value.trim() };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (state.search.trim().toLowerCase() === '') {\n      return toast.warn('Enter correct search!');\n    }\n\n    onSubmit(state.search);\n    setState({ ...initialState });\n  };\n\n  const { query } = state;\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <SearchButton type=\"submit\" aria-label=\"search-button\">\n          <ImSearch />\n        </SearchButton>\n\n        <Input\n          name=\"search\"\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          required\n          onChange={handleChange}\n        />\n      </Form>\n    </Container>\n  );\n};\n\nexport default memo(Searchbar);\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState, useMemo, useCallback } from 'react';\nimport { Notify } from 'notiflix';\n\nimport { fetchMovies } from 'shared/services/fetch-api';\nimport { PaginationStyled } from 'shared/Pagination.syled';\nimport Loader from 'shared/Loader/Loader';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = useMemo(() => Object.fromEntries([...searchParams]), [searchParams]);\n\n  const { query, page } = params;\n  const currentPage = Number(page) ? Number(page) : 1;\n  const [totalPages, setTotalPages] = useState(0);\n  const [movie, setMovie] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const getMovie = async page => {\n        const { results, total_pages } = await fetchMovies(page, query);\n        if (!results.length) {\n          Notify.failure('No found');\n          setTotalPages(0);\n        } else {\n          setTotalPages(total_pages);\n          setMovie(results);\n        }\n      };\n      getMovie(currentPage, query);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [query, currentPage, page]);\n\n  const onSearchMovie = useCallback(\n    query => {\n      if (query !== searchQuery) {\n        setSearchParams({ query, page: 1 });\n        setMovie([]);\n        setSearchQuery(query);\n      } else {\n        Notify.warning('you have already entered this query!');\n      }\n    },\n    [setSearchParams, searchQuery]\n  );\n\n  const handlePageClick = e => {\n    setSearchParams({ query, page: e.selected + 1 });\n  };\n\n  return (\n    <main style={{ paddingBottom: 20 }}>\n      <Searchbar onSubmit={onSearchMovie} />\n      <MovieList results={movie} />\n      {error && <p>Error{error.message}</p>}\n      {totalPages > 1 && (\n        <PaginationStyled\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={3}\n          pageCount={totalPages}\n          previousLabel=\"<\"\n          renderOnZeroPageCount={null}\n          disabledLinkClassName=\"disabled\"\n          activeClassName=\"activePage\"\n          forcePage={currentPage - 1}\n        />\n      )}\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  justify-content: flex-start;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  font-size: 16px;\n  font-weight: 500;\n\n  @media (max-width: 500px) {\n    flex-wrap: wrap;\n  }\n\n  & li {\n    color: ${p => 'grey'};\n\n    transition: color 250ms linear;\n\n    :hover:not(.disabled) {\n      color: ${p => 'black'};\n    }\n  }\n\n  & .activePage {\n    color: ${p => 'red'};\n  }\n\n  & a {\n    padding: 0 8px;\n    cursor: pointer;\n  }\n\n  & a.disabled {\n    cursor: default;\n  }\n`;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '2134d13c1835ef13ec8cd549d2172bad',\n  },\n});\n\nexport const fetchTrending = async page => {\n  const mediaType = 'movie';\n  const time = 'week';\n  const { data } = await instance.get(`/trending/${mediaType}/${time}?page=${page}`);\n  return data;\n};\n\nexport const fetchMovies = async (page, query) => {\n  const { data } = await instance.get(`/search/movie?page=${page}&query=${query}`);\n  return data;\n};\n\nexport const fetchMovieById = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\n\nexport const fetchCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n"],"names":["StyledList","styled","StyledItem","MovieLink","NavLink","MovieList","results","location","useLocation","elements","map","id","title","to","state","from","defaultProps","Container","Form","SearchButton","Input","search","Searchbar","onSubmit","useState","initialState","setState","query","e","preventDefault","trim","toLowerCase","toast","type","name","value","autoComplete","autoFocus","placeholder","required","onChange","target","prevState","memo","useSearchParams","searchParams","setSearchParams","params","useMemo","Object","fromEntries","page","currentPage","Number","totalPages","setTotalPages","movie","setMovie","searchQuery","setSearchQuery","loading","setLoading","error","setError","useEffect","getMovie","fetchMovies","total_pages","length","Notify","err","message","onSearchMovie","useCallback","style","paddingBottom","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","disabledLinkClassName","activeClassName","forcePage","Loader","PaginationStyled","ReactPaginate","p","instance","axios","baseURL","api_key","fetchTrending","get","data","fetchMovieById","movieID","fetchCredits","movieId","fetchReviews"],"sourceRoot":""}